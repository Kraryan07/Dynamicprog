coin change

class Solution {
public:
   int mincoin(int i,int tar,vector<int>&coins,vector<vector<int>>&dp){
    if(i==0){
         if(tar%coins[0]==0) return tar/coins[0];
         return (tar==0)?0:1e9;
    }
    if(dp[i][tar]!=-1) return dp[i][tar];
    int notake=mincoin(i-1,tar,coins,dp);
    int take=1e9;
    if(coins[i]<=tar){
        take=1+mincoin(i,tar-coins[i],coins,dp);
    }
    return dp[i][tar]=min(take,notake);
   }
    int coinChange(vector<int>& coins, int amount) {
        int n=coins.size();
        vector<vector<int>>dp(n,vector<int>(amount+1,-1));
        int res= mincoin(n-1,amount,coins,dp);
        return (res==1e9)? -1:res;
    }
};
